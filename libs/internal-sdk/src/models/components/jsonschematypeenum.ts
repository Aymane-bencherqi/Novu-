/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";

/**
 * JSON Schema type
 */
export const JsonSchemaTypeEnum = {
  String: "string",
  Number: "number",
  Integer: "integer",
  Boolean: "boolean",
  Array: "array",
  Object: "object",
  Null: "null",
} as const;
/**
 * JSON Schema type
 */
export type JsonSchemaTypeEnum = ClosedEnum<typeof JsonSchemaTypeEnum>;

/** @internal */
export const JsonSchemaTypeEnum$inboundSchema: z.ZodNativeEnum<
  typeof JsonSchemaTypeEnum
> = z.nativeEnum(JsonSchemaTypeEnum);

/** @internal */
export const JsonSchemaTypeEnum$outboundSchema: z.ZodNativeEnum<
  typeof JsonSchemaTypeEnum
> = JsonSchemaTypeEnum$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace JsonSchemaTypeEnum$ {
  /** @deprecated use `JsonSchemaTypeEnum$inboundSchema` instead. */
  export const inboundSchema = JsonSchemaTypeEnum$inboundSchema;
  /** @deprecated use `JsonSchemaTypeEnum$outboundSchema` instead. */
  export const outboundSchema = JsonSchemaTypeEnum$outboundSchema;
}
