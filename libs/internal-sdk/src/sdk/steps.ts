/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { workflowsStepsGeneratePreview } from "../funcs/workflowsStepsGeneratePreview.js";
import { workflowsStepsRetrieve } from "../funcs/workflowsStepsRetrieve.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Steps extends ClientSDK {
  /**
   * Generate preview
   *
   * @remarks
   * Generates a preview for a specific workflow step
   */
  async generatePreview(
    request: operations.WorkflowControllerGeneratePreviewRequest,
    options?: RequestOptions,
  ): Promise<operations.WorkflowControllerGeneratePreviewResponse> {
    return unwrapAsync(workflowsStepsGeneratePreview(
      this,
      request,
      options,
    ));
  }

  /**
   * Get workflow step data
   *
   * @remarks
   * Retrieves data for a specific step in a workflow
   */
  async retrieve(
    workflowId: string,
    stepId: string,
    idempotencyKey?: string | undefined,
    options?: RequestOptions,
  ): Promise<operations.WorkflowControllerGetWorkflowStepDataResponse> {
    return unwrapAsync(workflowsStepsRetrieve(
      this,
      workflowId,
      stepId,
      idempotencyKey,
      options,
    ));
  }
}
